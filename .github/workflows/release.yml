name: Release
on: [push]

jobs:
  build:
    if: "contains(github.event.head_commit.message, '[Release] ')"
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install --include=dev

      - name: Build and Package
        run: | 
          npm run build
          app_path=$(find out -name "Cheese.app" -type d)
          ditto -c -k --sequesterRsrc --keepParent $app_path Cheese.MacOS.zip
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Cheese
          path: Cheese.MacOS.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: Cheese

      - name: Get Current Date
        run: echo "::set-output name=date::$(date "+%d.%m.%Y")"
        id: date

      - name: Create Release
        run: gh release create ${{ steps.date.outputs.date }} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload File
        run: gh release upload ${{ steps.date.outputs.date }} --name Cheese.MacOS.zip --file Cheese.MacOS.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
